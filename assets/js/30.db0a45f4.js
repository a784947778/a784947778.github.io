(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{306:function(n,t,s){"use strict";s.r(t);var e=s(13),i=Object(e.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("1、中间件，事物、哨兵模式、主从复制、mq保证消息不丢失、jvm")]),n._v(" "),t("p",[t("strong",[n._v("1、网页爬虫：")]),n._v(" 爬虫程序可以使用布隆过滤器来过滤掉已经爬取过的网页，避免重复爬取和浪费资源。")]),n._v(" "),t("p",[t("strong",[n._v("2、缓存系统：")]),n._v(" 缓存系统可以使用布隆过滤器来判断一个查询是否可能存在于缓存中，从而减少查询缓存的次数，提高查询效率。布隆过滤器也经常用来解决缓存穿透的问题。")]),n._v(" "),t("p",[t("strong",[n._v("3、分布式系统：")]),n._v(" 在分布式系统中，可以使用布隆过滤器来判断一个元素是否存在于分布式缓存中，避免在所有节点上进行查询，减少网络负载。")]),n._v(" "),t("p",[t("strong",[n._v("4、垃圾邮件过滤：")]),n._v(" 布隆过滤器可以用于判断一个邮件地址是否在垃圾邮件列表中，从而过滤掉垃圾邮件。")]),n._v(" "),t("p",[t("strong",[n._v("5、黑名单过滤：")]),n._v(" 布隆过滤器可以用于判断一个IP地址或手机号码是否在黑名单中，从而阻止恶意请求。")]),n._v(" "),t("p",[n._v("安全访问场景\n线程池\n枫叶云笔记\nspringboot自动装配")]),n._v(" "),t("p",[n._v("spring如何管理单例模式")]),n._v(" "),t("p",[n._v("mybatis如何使用threadlocal解决线程的?")]),n._v(" "),t("p",[n._v("Future的用法\nBean的生命周期\nbean的实例化过程\n设计模式\n索引失效的\n1亿数据粗壮乃128张表，如何做批量修改")]),n._v(" "),t("p",[n._v("1、dubbo服务的泛化调用？\n2、redis哨兵模式？\n3、redis分布式锁实现？\n4、mysql索引存储结构&如何调优/b-tree特点、计算复杂度及影响复杂度的因素\n5、JVM运行组成与原理及调优\n6、Java类加载器运行原理\n7、Java中GC过程原理|使用的回收算法原理\n8、Redis中hash一致性实现及与hash其他区别\n9、Java多线程、线程池开发、管理Lock与Synchroined区别\n10、Spring IOC/AOP 原理；加载过程的 / @Bean的作用是什么 / 事务的等级有几种 / 假如A方法没事务，B方法有事务，a调b  b报错事务会回滚嘛，如果不能回滚怎么能让他们回滚，AOP的本质、spring没有事务的方法调用有事务的方法,有事务的方法报错\n12、熔断器的降级和熔断是干什么的？\n13、mybatis如果映射到数据库\n14、分布式高并发\nhttps://www.cnblogs.com/expiator/p/9853378.html\n15 情景题关于热点排序的，用redis的zset数据类型就可以解决，排行榜可以按点击量加1,（确认是否可以实现）\n16 调优，cpu高了，要怎么分析出问题所在\n17 微服务各组件的通讯原理\n如何加密传输和存储用户密码 https://juejin.cn/post/6844903604944371726#heading-8\n雪花算法\nmapreduce算法过程")]),n._v(" "),t("p",[n._v("黑马程序员Java教程及资料")]),n._v(" "),t("p",[n._v("【全套教程下载】\n下载地址：https://pan.baidu.com/s/1LxIxcHDO7SYB96SE-GZfuQ\n提取码：dor4")]),n._v(" "),t("p",[n._v("【其他精品教程】\n下载地址：https://pan.baidu.com/s/1oPdzQ7vO2bivTYtttD1jfw\n提取码：1234")]),n._v(" "),t("p",[n._v("【B站在线观看】\n地址：https://www.bilibili.com/read/cv9965357")]),n._v(" "),t("p",[n._v("【了解Java全体系课程】\n地址：http://java.itheima.com/?xcx")]),n._v(" "),t("p",[n._v("** 在项目中如何解决访问mysql瓶颈问题？\n1.减少链接（用数据库连接池，减少频繁创建数据库链接）\n2.分库分表，数据库集群\n3.加缓存层（列：redis等）")]),n._v(" "),t("p",[n._v("** 缓存穿透概念\n去缓存层中没有命中数据，进而去数据库中查询数据")]),n._v(" "),t("p",[n._v("** 导致缓存穿透的现象\n1.当请求中带有的请求条件id，数据库没有，数据库没有，导致redis中肯定是没有，这样就会导致每次请求都会不停的访问我们的数据库\n（基本的解决方案：缓存一份null数据到redis中，同样的条件id，就不会查询数据库了，但是如果不用同样条件不停访问，问题依旧，在redis和数据库中加一个布隆过滤器）")]),n._v(" "),t("p",[n._v("** 过滤器存放的位置一般都在内存中，如何解决过滤器内存紧张问题\n布隆算法：通过一定的容错率换取空间，通过bit数组来标识数据，计算hash函数（1.hash值的范围在0,length-1之间  2计算出来的hash值，足够散列） 存在问题：存在hash碰撞，所以导致错误率  解决方法：1.加大数组的长度  2增加hash函数的个数（hash函数的个数并不是越多越好，需要参考数组长度）\n结论：hash错误率：博隆过滤器说数据存在，那么实际不一定存在，说数据不存在，那么一定不存在\n弊端：删除数据问题（可以运用二位数组表示次数）")]),n._v(" "),t("p",[n._v("** 缓存雪崩：**缓存层中缓存的数据，在某一个时刻突然失效了（无法访问）导致大量的请求打向mysql数据库"),t("br"),n._v("\n原因：\n1.redis中缓存的数据有效期一致导致的---》给每条数据加上一个随机有效期，不要突然统一失效\n2.redis数据库挂了--》分布式缓存")]),n._v(" "),t("p",[n._v("**缓存击穿：Redis中只缓存一条数据")]),n._v(" "),t("p",[n._v("** redis集群的hash一致性算法 hash环容易造成是数据倾斜，创建redis的虚拟节点（如何创建）")]),n._v(" "),t("p",[n._v("缓存击穿和缓存雪崩本质上都是缓存穿透，缓存击穿和缓存雪崩是缓存击穿的特殊表现")]),n._v(" "),t("p",[n._v("redis如何解决hash冲突的？")]),n._v(" "),t("p",[n._v("** 什么情况下需要上锁？**\n1.共享资源\n2.多任务环境\n3.共享资源是互斥")]),n._v(" "),t("p",[n._v("** 实现分布式锁方式**\nMysql,zookeeper,Redis\nhttps://www.bilibili.com/video/BV13T4y1M7NS?p=4&spm_id_from=pageDriver")]),n._v(" "),t("p",[n._v("redis实现分布式锁\n可以根据字符串SETNX命令，创建对应的锁，如果在向redis中设置锁的时候，如果返回的成功，执行代码逻辑，代码最后一定要释放锁，为防止逻辑代码中有抛异常导致不能释放锁的情况，可以用try{}finally{},无论代码是否执行成功，都要释放锁，为复制服务器宕机等类似其他情况而导致的锁不能释放问题，可以给锁加失效时间，如果false没有获取锁，执行报错等其他逻辑，")]),n._v(" "),t("p",[n._v("问题：\n*在主线程中开启一个分线程的定时任务，主线程结束以后，分线程也一起结束？如何实现？jdk的Timer的用法？redisson?"),t("br"),n._v("\n*redis主从节点导致锁失效问题，模拟场景，如果主节点没有即使把锁更新到从节点，而宕机了，但是从节点提升为了主节点\n*mysql的串行化\n*大量数据关键词高效查询怎么搞？不能用solr,luce那样的框架")]),n._v(" "),t("p",[n._v("1、springcloud的定时器\n2、jwt登陆，验证\n3、注解实现对数据和权限的验证\n4、区分移动和web端的登陆，做不同的过滤验证\n5、redis缓存技术？缓存穿透问题？（解决方法：布隆过滤器(位数组)Guava工具类）\n6、分布式事务锁\n7、线程，网络编程，消息队列，设计模式\n8、微信支付宝支付功能研究\n9、redis哨兵\n10、zuul中其他项目的配置是为了什么\n12、java反射的newInstance底层实现原理\n13、static关键字在多线程中有什么样的体现\n14、@Autowired的对象加载的时机,两个链接所获取的对象是否一样。\nhttps://www.renren.io/guide/，开源框架\nhttps://www.cs.usfca.edu/~galles/visualization/Algorithms.html 旧金山计算机科学大学\noverflowStack国外技术论坛")]),n._v(" "),t("p",[n._v("1.cookie达到上限如何处理\ncookie长度过长导致调用HttpServletResponse的addCookie()方法会添加不成功。\n浏览器（IE可用）（火狐，谷歌不可用）\n2.用户登录验证功能\nwww.springcloud.cc\nwww.springcloud.cn\n整合spring cloud云架构 - SSO单点登录之OAuth2.0登录认证(1)\n注意：\n缓存的时间（页面多长时间没有操作默认登出）\n账号登录的唯一性\nhttps://blog.csdn.net/qq_22172133/article/details/82291112\nhttps://blog.csdn.net/weixin_41446894/article/details/86260854（分布式锁）\nhttps://blog.csdn.net/lyflyyvip/article/details/82288719（OutOfMemoryError错误解决）\nhttps://blog.csdn.net/u010502101/article/details/81989756#（springcloud搭建过程）\nhttps://wiselyman.iteye.com/blog/2379419(SpringCloud下基于OAUTH2认证授权的实现)\nhttps://www.jianshu.com/p/672a22886acd  (springcloud 中 zuul 权限认证思路讲解)\nhttps://blog.csdn.net/dunegao/article/details/90720241(zuul通过zuulFilter实现token的权限认证和增加公共参数)\nhttps://www.cnblogs.com/qdhxhz/p/9601170.html")]),n._v(" "),t("p",[n._v("https://www.cnblogs.com/qdhxhz/p/9471659.html（简单的聊天功能）")]),n._v(" "),t("p",[n._v("单点登录：\n点击登录，判断用户或密码是否为空，判断用户名密码是否正确，\n如何防止登录以后，信息被非法截取，不能通过验证登录的问题？\nhttps://www.cnblogs.com/volatile0509/p/9352412.html（登录功能规划）\nhttp://wemedia.ifeng.com/71565705/wemedia.shtml（登录功能需要的测试点）\nhttp://www.sohu.com/a/113769261_355140（一个完整的微服务系统，应该包含哪些功能）\n网站的登录状态通过cookies来保持的，cookie里面存储token，每次请求后端服务器都会带上token【token是后台给你发的一个唯一标识】，以此验证用户是否登录。\n输入用户、密码=》点击登录，发送到服务端=》服务端验证密码，生成token=》写入到cookies，返回成功\n客户端请求后台登录接口。\n后台验证通过后，将用户的登录状态保存至cookie并写入客户端。\n客户端再次登录网站，请求login接口时，后台直接从客户端获取到该用户写入cookie的登录状态。\n通过对该状态的验证，确认用户是否需要再次登录。\n如cookie过期，则跳转至登录页；如未过期，则直接显示为已登录状态。")]),n._v(" "),t("p",[n._v("未知技术：kafka/Remoting/Cache/Messaging等\n了解分布式应用设计与SOA，并在项目中应用SOA技术与MQ技术，kafka,zookeeper")]),n._v(" "),t("p",[n._v("APP和web的加密方式")]),n._v(" "),t("p",[n._v("https的加密方法（各种协议的了解，TCP等等）")]),n._v(" "),t("p",[n._v("使用http传送一个40G大小的文件，对方如何获取文件的大小？")]),n._v(" "),t("p",[n._v("activiti工作流\nNginx:wget http://nginx.org/download/nginx-1.14.2.tar.gz")])])}),[],!1,null,null,null);t.default=i.exports}}]);