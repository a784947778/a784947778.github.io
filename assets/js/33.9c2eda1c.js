(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{309:function(a,t,s){"use strict";s.r(t);var e=s(13),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("center",[t("h1",[a._v("MySQL")])]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("数据库管理员（Database Administrator，简称DBA）")]),a._v(" "),t("h3",{attrs:{id:"关系性数据库的4个特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系性数据库的4个特性"}},[a._v("#")]),a._v(" 关系性数据库的4个特性")]),a._v(" "),t("ul",[t("li",[a._v("A 原子性")]),a._v(" "),t("li",[a._v("C 一致性")]),a._v(" "),t("li",[a._v("I 隔离性")]),a._v(" "),t("li",[a._v("D 持久性")])]),a._v(" "),t("center",[t("h2",[a._v("MySQL数据处理和查询的方式")])]),a._v(" "),t("h3",{attrs:{id:"_1-获取指定几天时间段内-每天排名前10的数据并对某一个分值字段求和"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取指定几天时间段内-每天排名前10的数据并对某一个分值字段求和"}},[a._v("#")]),a._v(" 1.获取指定几天时间段内，每天排名前10的数据并对某一个分值字段求和")]),a._v(" "),t("p",[a._v("表结构：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("CREATE TABLE `test1` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `search_time` varchar(255) DEFAULT NULL COMMENT '查询时间',\n  `user_id` int(11) DEFAULT NULL COMMENT '用户id',\n  `rank` tinyint(4) DEFAULT NULL COMMENT '排序',\n  `num` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;\n")])])]),t("p",[a._v("查询方式：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("SELECT search_time,num FROM test1 t WHERE t.rank >= IFNULL(( SELECT t1.rank FROM test1 t1 WHERE t1.search_time = t.search_time ORDER BY rank DESC LIMIT n,1 ), 0 ) \n")])])]),t("p",[a._v("备注：")]),a._v(" "),t("p",[a._v("对于一些天会查询出多余的数据，因为可能存在所查询的第n条和n加1条rank值相同的情况，需要在代码中进行分组统计处理。")]),a._v(" "),t("h3",{attrs:{id:"_2-查询a表中在b表中没有的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-查询a表中在b表中没有的数据"}},[a._v("#")]),a._v(" 2.查询a表中在b表中没有的数据")]),a._v(" "),t("p",[a._v("查询方式：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("SELECT a.id, a.uid FROM t_user_info_group a LEFT JOIN t_user_info b ON a.uid = b.uid \nWHERE b.uid IS NULL ORDER BY a.id LIMIT 0,20\n")])])]),t("h3",{attrs:{id:"_3-执行赋权的命令-参数-user-和-password"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行赋权的命令-参数-user-和-password"}},[a._v("#")]),a._v(" 3.执行赋权的命令：参数 user 和 password")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("GRANT ALL PRIVILEGES ON *.* TO 'user'@'%'IDENTIFIED BY 'password' WITH GRANT OPTION;\n")])])]),t("p",[a._v("-- 查询出MySQL数据库表在电脑上存放的位置")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('SHOW GLOBAL VARIABLES LIKE "%datadir%";\n')])])]),t("h3",{attrs:{id:"_4-索引操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-索引操作"}},[a._v("#")]),a._v(" 4.索引操作")]),a._v(" "),t("ol",[t("li",[a._v("创建索引")])]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ALTER TABLE test_user ADD INDEX idx_name(`name`);\nPRIMARY KEY(主键索引)、INDEX(普通索引)、UNIQUE(唯一索引)、FULLTEXT(全文索引)\nALTER TABLE test_user ADD KEY idx_name1(`name`);\nCREATE INDEX index_name ON table_name(column_name,column_name);......\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("删除索引")])]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ALTER TABLE test_user DROP INDEX idx_name1;\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[a._v("查看表索引")])]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("SHOW INDEX FROM test_user;\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[a._v("二级索引")])]),a._v(" "),t("p",[a._v("-- 添加数据")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO test_user (k1,k2...) VALUES (v1,v2);\n")])])]),t("p",[a._v("-- UNION 和 UNION All不同\nUNION：对两个结果集进行并集操作，不包括重复行，同时进行默认规则的排序;\nUNION All：对两个结果集进行并集操作，包括重复行，不进行排序;\n语法格式：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("SELECT employee_id,job_id from table1 \n\tUNION (或者 UNION ALL)\n\tSELECT employee_id,job_id from table2;\n")])])]),t("p",[a._v("<=>与 = 的区别在于当两个操作码均为 NULL 时，其所得值为 1 而不为 NULL，而当一个操作码为 NULL 时，其所得值为 0而不为 NULL。")]),a._v(" "),t("p",[a._v("-- OPTIMIZE TABLE的作用\nOPTIMIZE TABLE 可以重新利用未使用的空间，并整理数据文件的碎片，只对MyISAM, BDB和InnoDB表起作用，注意：在OPTIMIZE TABLE运行过程中，MySQL会锁定表。")]),a._v(" "),t("p",[a._v("-- FOR UPDATE用法\nFOR UPDATE 是在数据库中上锁用的，可以为数据库中的行上一个排它锁。当一个事务的操作未完成时候，其他事务可以读取但是不能写入或更新。")]),a._v(" "),t("p",[a._v("-- EXISTS(SELECT * FROM table WHERE 条件1....)用法\nEXISTS()用于检查子查询是否至少会返回一行数据，该子查询实际上并不返回任何数据，返回1或0，1代表true，0代表false")]),a._v(" "),t("p",[a._v("-- 测试版本mysql5.5 一张表，8条数据\n-- < / > / IS NULL/IS NOT NULL/BETWEEN AND/!=/IN(不可为子查询)(注意：用到覆盖索引除外)")]),a._v(" "),t("p",[a._v("-- 问题？？？？？？？\n-- 页分裂？？？？？？")]),a._v(" "),t("p",[a._v("需要学习内容\nhttps://blog.csdn.net/ysl19910806/article/details/98950553")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);